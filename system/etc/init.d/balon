#!/bin/sh

### BEGIN INIT INFO
# Provides:          balon
# Required-Start:    $gpsd $syslog $network $remote_fs
# Required-Stop:
# Default-Start:     2
# Default-Stop:      
# Short-Description: balon monitoring script
# Description:       earth health monitoring
### END INIT INFO

. /lib/lsb/init-functions

[ -f /etc/default/rcS ] && . /etc/default/rcS
PATH=/bin:/usr/bin:/sbin:/usr/sbin
DAEMON=/home/odroid/git/balon/scripts/monitor.py
PIDDIR=/var/run
PIDFILE=$PIDDIR/balon.pid
DESC="balon data capture daemon"
NAME=balon

PIDFILE=~odroid/monitor.pid

GPSTIMESCRIPT=~odroid/git/balon/scripts/gpstime.py

VERBOSE=yes
case "$1" in
  start)
        #log_begin_msg "Waiting for GPS fix to set time"
        #if [ -x $GPSTIMESCRIPT ]; then 
        #  date --utc --set="$($GPSTIMESCRIPT)" && log_end_msg 0
        #else
        #  echo "GPS time set script not executable"
        #  log_end_msg 1
        #fi

        if [ -e $PIDFILE ]; then
          if $0 status > /dev/null ; then
            log_success_msg "$DESC already started; not starting."
            return
          else
            log_success_msg "Removing stale PID file $PIDFILE."
            rm -f $PIDFILE
          fi
        fi

        log_begin_msg "Starting $DESC" "$NAME"
        start-stop-daemon --start -b --chuid root --quiet --pidfile $PIDFILE \
           --exec $DAEMON -- --system $PARAMS
        log_end_msg $?

        #echo $( su -l -c '$HOME/scripts/monitor.py >>/home/odroid/monitor.log 2>&1 & echo $!' odroid ) >~odroid/monitor.pid
        ;;
  stop)
        log_daemon_msg "Stopping $DESC" "$NAME"
	start-stop-daemon --stop --retry 5 --quiet --oknodo --pidfile $PIDFILE \
	  --user $DAEMONUSER
	log_end_msg $?
	rm -f $PIDFILE
        ;;
  force-reload|restart)
        $0 stop
        $0 start
        ;;
  status)
        status_of_proc -p $PIDFILE $DAEMON $NAME && exit 0 || exit $?
        exit 0
        ;;
  *)
        log_success_msg "Usage: /etc/init.d/balon {start|stop|restart|force-reload|status}"
        exit 1
esac

exit 0
